function bindat = binave(data,varargin)% BINAVE: averages vector data in bins of length r.% bindat=BINAVE(data,r,dim) computes an average vector of the matrix % data in bins of length r, over dimension dim.  <edit CH 1/05:  The data % at the end of the set not long enough for a bin is now discarded.>%% USAGE:   bindat = binave(data,r,dim)% INPUT:   data - data vector%          r - number of elements in bin to be averaged%          dim - dimension on which to average over%% OUTPUT:  bindat - bin-averaged vector%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3/8/97: version 1.0% 9/19/98: version 1.1 (vectorized by RP)% 8/5/99: version 2.0% 1/19/05 version 3.0 (matricized by CH)% 6/30/05 version 3.1 added dimension argin% 9/01/07 version 3.2 transpose added by FRAM%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% check inputif nargin < 2   error('Not enough input arguments.')elseif nargin == 2    r = varargin{1};    siz = size(data);    if siz(1) > siz(2)    dim = 1;    else        dim = 2;    endelseif nargin == 3     r = varargin{1};    dim = varargin{2};endif abs(r-fix(r)) > eps   error('Bin size R must be a positive integer.')endif fix(r) == 1	bindat = data;	returnendif r <= 0	error('Bin size R must be a positive integer.')end% compute bin averaged seriesif dim == 2    data = data';end[N,M]=size(data);l = fix(N/r);bindat = nanmean(reshape(data(1:l*r,:),r,l*M));bindat = reshape(bindat,l,M);if dim == 2    bindat = bindat';end